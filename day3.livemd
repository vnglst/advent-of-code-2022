# Day 3

```elixir
Mix.install([
  {:kino, "~> 0.7.0"}
])
```

## Part 1

```elixir
input = "vJrwpWtwJgWrhcsFMMfFFhFp
jqHRNqRjqzjGDLGLrsFMfFZSrLrFZsSL
PmmdzqPrVvPwwTWBwg
wMqvLMZHhHMvwLHjbvcjnnSBnvTQFn
ttgJtRGJQctTZtZT
CrZsJsPPZsGzwwsLwLmpwMDw" |> String.split("\n")

defmodule Str do
  def split_in_two(s) do
    len = String.length(s)
    half_len = div(len, 2)
    [String.slice(s, 0..half_len), String.slice(s, half_len..len)]
  end

  def first_common_char([s1, s2]) do
    s1
    |> String.codepoints()
    |> Enum.find(fn char -> String.contains?(s2, char) end)
  end

  def priority(<<lower::utf8>>) when lower in ?a..?z, do: lower - ?a + 1
  def priority(<<upper::utf8>>) when upper in ?A..?Z, do: upper - ?A + 27
end

input
|> Enum.map(&Str.split_in_two/1)
|> Enum.map(&Str.first_common_char/1)
|> Enum.map(&Str.priority/1)
|> Enum.sum()
```

```elixir
input = Kino.Input.textarea("Please add your input from Advent of Code")
```

```elixir
input
|> Kino.Input.read()
|> String.split("\n")
|> Enum.map(&Str.split_in_two/1)
|> Enum.map(&Str.first_common_char/1)
|> Enum.map(&Str.priority/1)
|> Enum.sum()
```

## Part 2

```elixir
"vJrwpWtwJgWrhcsFMMfFFhFp
jqHRNqRjqzjGDLGLrsFMfFZSrLrFZsSL
PmmdzqPrVvPwwTWBwg
wMqvLMZHhHMvwLHjbvcjnnSBnvTQFn
ttgJtRGJQctTZtZT
CrZsJsPPZsGzwwsLwLmpwMDw"
|> String.split("\n")
|> Enum.map(&String.split(&1, "", trim: true))
|> Enum.map(&MapSet.new/1)
|> Enum.chunk_every(3)
|> Enum.flat_map(fn group ->
  Enum.reduce(group, &MapSet.intersection/2)
end)
|> Enum.map(&Str.priority/1)
|> Enum.sum()

input
|> Kino.Input.read()
|> String.split("\n")
|> Enum.map(&String.split(&1, "", trim: true))
|> Enum.map(&MapSet.new/1)
|> Enum.chunk_every(3)
|> Enum.flat_map(fn group ->
  Enum.reduce(group, &MapSet.intersection/2)
end)
|> Enum.map(&Str.priority/1)
|> Enum.sum()
```
